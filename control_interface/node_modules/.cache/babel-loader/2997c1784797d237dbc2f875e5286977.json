{"ast":null,"code":"var _jsxFileName = \"/Users/Work/Desktop/control-interface test/src/ToggleButton.js\";\n// This is the component for the toggle button.\n// id is required for the component to function\nimport React, { Component } from \"react\";\nimport \"./ToggleButton.css\";\nimport PropTypes from \"prop-types\";\n\nclass ToggleButton extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checked: this.props.defaultChecked // whether toggle button is checked/ON (true) or not checked/OFF (false)\n\n    };\n\n    this.onChange = e => {\n      this.setState({\n        checked: e.target.checked\n      });\n      if (typeof this.props.onChange === \"function\") this.props.onChange();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toggle-switch\" + (this.props.Small ? \" small-switch\" : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: this.props.Name,\n      className: \"toggle-switch-checkbox\",\n      id: this.props.id,\n      checked: this.props.currentValue,\n      defaultChecked: this.props.defaultChecked,\n      onChange: this.onChange,\n      disabled: this.props.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }), this.props.id ? /*#__PURE__*/React.createElement(\"label\", {\n      className: \"toggle-switch-label\",\n      htmlFor: this.props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: this.props.disabled ? \"toggle-switch-inner toggle-switch-disabled\" : \"toggle-switch-inner\",\n      \"data-yes\": this.props.Text[0],\n      \"data-no\": this.props.Text[1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: this.props.disabled ? \"toggle-switch-switch toggle-switch-disabled\" : \"toggle-switch-switch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    })) : null);\n  } // Set text for rendering.\n\n\n}\n\nToggleButton.defaultProps = {\n  Text: [\"ON\", \"OFF\"]\n};\nToggleButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  Text: PropTypes.string.isRequired,\n  Name: PropTypes.string,\n  onChange: PropTypes.func,\n  defaultChecked: PropTypes.bool,\n  Small: PropTypes.bool,\n  currentValue: PropTypes.bool,\n  disabled: PropTypes.bool\n};\nexport default ToggleButton;","map":{"version":3,"sources":["/Users/Work/Desktop/control-interface test/src/ToggleButton.js"],"names":["React","Component","PropTypes","ToggleButton","state","checked","props","defaultChecked","onChange","e","setState","target","render","Small","Name","id","currentValue","disabled","Text","defaultProps","propTypes","string","isRequired","func","bool"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCG,KADmC,GAC3B;AACNC,MAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,cADd,CAC6B;;AAD7B,KAD2B;;AAAA,SAInCC,QAJmC,GAIxBC,CAAC,IAAI;AACd,WAAKC,QAAL,CAAc;AACZL,QAAAA,OAAO,EAAEI,CAAC,CAACE,MAAF,CAASN;AADN,OAAd;AAGA,UAAI,OAAO,KAAKC,KAAL,CAAWE,QAAlB,KAA+B,UAAnC,EAA+C,KAAKF,KAAL,CAAWE,QAAX;AAChD,KATkC;AAAA;;AAUnCI,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,SAAS,EAAE,mBAAmB,KAAKN,KAAL,CAAWO,KAAX,GAAmB,eAAnB,GAAqC,EAAxD,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWQ,IAFnB;AAGE,MAAA,SAAS,EAAC,wBAHZ;AAIE,MAAA,EAAE,EAAE,KAAKR,KAAL,CAAWS,EAJjB;AAKE,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWU,YALtB;AAME,MAAA,cAAc,EAAE,KAAKV,KAAL,CAAWC,cAN7B;AAOE,MAAA,QAAQ,EAAE,KAAKC,QAPjB;AAQE,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWW,QARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAaG,KAAKX,KAAL,CAAWS,EAAX,gBACC;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAuC,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWS,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EACP,KAAKT,KAAL,CAAWW,QAAX,GACI,4CADJ,GAEI,qBAJR;AAME,kBAAU,KAAKX,KAAL,CAAWY,IAAX,CAAgB,CAAhB,CANZ;AAOE,iBAAS,KAAKZ,KAAL,CAAWY,IAAX,CAAgB,CAAhB,CAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAUE;AACE,MAAA,SAAS,EACP,KAAKZ,KAAL,CAAWW,QAAX,GACI,6CADJ,GAEI,sBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADD,GAmBG,IAhCN,CADF;AAoCD,GA/CkC,CAgDnC;;;AAhDmC;;AAA/Bd,Y,CAiDGgB,Y,GAAe;AACpBD,EAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAP;AADc,C;AAKxBf,YAAY,CAACiB,SAAb,GAAyB;AACvBL,EAAAA,EAAE,EAAEb,SAAS,CAACmB,MAAV,CAAiBC,UADE;AAEvBJ,EAAAA,IAAI,EAAEhB,SAAS,CAACmB,MAAV,CAAiBC,UAFA;AAGvBR,EAAAA,IAAI,EAAEZ,SAAS,CAACmB,MAHO;AAIvBb,EAAAA,QAAQ,EAAEN,SAAS,CAACqB,IAJG;AAKvBhB,EAAAA,cAAc,EAAEL,SAAS,CAACsB,IALH;AAMvBX,EAAAA,KAAK,EAAEX,SAAS,CAACsB,IANM;AAOvBR,EAAAA,YAAY,EAAEd,SAAS,CAACsB,IAPD;AAQvBP,EAAAA,QAAQ,EAAEf,SAAS,CAACsB;AARG,CAAzB;AAWA,eAAerB,YAAf","sourcesContent":["// This is the component for the toggle button.\n// id is required for the component to function\n\nimport React, { Component } from \"react\";\nimport \"./ToggleButton.css\";\nimport PropTypes from \"prop-types\";\n\n\nclass ToggleButton extends Component {\n  state = {\n    checked: this.props.defaultChecked // whether toggle button is checked/ON (true) or not checked/OFF (false)\n  };\n  onChange = e => {\n    this.setState({\n      checked: e.target.checked\n    });\n    if (typeof this.props.onChange === \"function\") this.props.onChange();\n  };\n  render() {\n    return (\n      <div\n        className={\"toggle-switch\" + (this.props.Small ? \" small-switch\" : \"\")}\n      >\n        <input\n          type=\"checkbox\"\n          name={this.props.Name}\n          className=\"toggle-switch-checkbox\"\n          id={this.props.id}\n          checked={this.props.currentValue}\n          defaultChecked={this.props.defaultChecked}\n          onChange={this.onChange}\n          disabled={this.props.disabled}\n        />\n        {this.props.id ? (\n          <label className=\"toggle-switch-label\" htmlFor={this.props.id}>\n            <span\n              className={\n                this.props.disabled\n                  ? \"toggle-switch-inner toggle-switch-disabled\"\n                  : \"toggle-switch-inner\"\n              }\n              data-yes={this.props.Text[0]}\n              data-no={this.props.Text[1]}\n            />\n            <span\n              className={\n                this.props.disabled\n                  ? \"toggle-switch-switch toggle-switch-disabled\"\n                  : \"toggle-switch-switch\"\n              }\n            />\n          </label>\n        ) : null}\n      </div>\n    );\n  }\n  // Set text for rendering.\n  static defaultProps = {\n    Text: [\"ON\", \"OFF\"]\n  };\n}\n\nToggleButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  Text: PropTypes.string.isRequired,\n  Name: PropTypes.string,\n  onChange: PropTypes.func,\n  defaultChecked: PropTypes.bool,\n  Small: PropTypes.bool,\n  currentValue: PropTypes.bool,\n  disabled: PropTypes.bool\n};\n\nexport default ToggleButton;\n"]},"metadata":{},"sourceType":"module"}