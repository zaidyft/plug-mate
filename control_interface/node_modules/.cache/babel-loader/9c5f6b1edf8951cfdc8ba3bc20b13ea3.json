{"ast":null,"code":"var _jsxFileName = \"/Users/Work/Desktop/control-interface test/src/Box.js\";\n// This is the final component for each plug load, containing the plug load icon and name and the toggle switch\nimport React from 'react';\nimport ToggleButton from './ToggleButton';\nimport './Box.css';\nimport Icon from './Icon';\n\nclass Box extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.id.toString() + \"BoxRemote\",\n      // id given to component\n      current: this.props.id,\n      // name of plug load\n      formatted: \"\",\n      // initialization of string for formatting of \"TaskLamp\"\n      toggleButtonId: this.props.id.toString() + \"ToggleRemote\"\n    };\n  }\n\n  render() {\n    // Make some formatting changes when the plug load chosen is task lamp\n    if (this.state.current === \"TaskLamp\") {\n      this.state.formatted = \"Task Lamp\";\n    } else {\n      this.state.formatted = this.state.current;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"containerRemote\",\n      id: this.state.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\",\n        fontFamily: \"Helvetica\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \" \", this.state.formatted, \" \"), /*#__PURE__*/React.createElement(Icon, {\n      current: this.state.current,\n      defaultState: \"ON\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ToggleButton, {\n      id: this.state.toggleButtonId,\n      defaultChecked: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Box;","map":{"version":3,"sources":["/Users/Work/Desktop/control-interface test/src/Box.js"],"names":["React","ToggleButton","Icon","Box","Component","constructor","props","state","id","toString","current","formatted","toggleButtonId","render","textAlign","fontFamily"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,EAAE,EAAE,KAAKF,KAAL,CAAWE,EAAX,CAAcC,QAAd,KAA2B,WADpB;AACiC;AAC5CC,MAAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWE,EAFT;AAEa;AACxBG,MAAAA,SAAS,EAAE,EAHA;AAGI;AACfC,MAAAA,cAAc,EAAE,KAAKN,KAAL,CAAWE,EAAX,CAAcC,QAAd,KAA2B;AAJhC,KAAb;AAMD;;AACDI,EAAAA,MAAM,GAAG;AACP;AACA,QAAI,KAAKN,KAAL,CAAWG,OAAX,KAAuB,UAA3B,EAAuC;AACrC,WAAKH,KAAL,CAAWI,SAAX,GAAuB,WAAvB;AACD,KAFD,MAEO;AACL,WAAKJ,KAAL,CAAWI,SAAX,GAAuB,KAAKJ,KAAL,CAAWG,OAAlC;AACD;;AAED,wBACE;AAAK,MAAA,KAAK,EAAC,iBAAX;AAA6B,MAAA,EAAE,EAAE,KAAKH,KAAL,CAAWC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,KAAK,EAAE;AAACM,QAAAA,SAAS,EAAE,QAAZ;AAAsBC,QAAAA,UAAU,EAAE;AAAlC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA4D,KAAKR,KAAL,CAAWI,SAAvE,MADF,eAEE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWG,OAA1B;AAAmC,MAAA,YAAY,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAE,KAAKH,KAAL,CAAWK,cAA7B;AAA6C,MAAA,cAAc,EAAC,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AA1B+B;;AA6BlC,eAAeT,GAAf","sourcesContent":["// This is the final component for each plug load, containing the plug load icon and name and the toggle switch\n\nimport React from 'react';\nimport ToggleButton from './ToggleButton';\nimport './Box.css';\nimport Icon from './Icon';\n\n\nclass Box extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.id.toString() + \"BoxRemote\", // id given to component\n      current: this.props.id, // name of plug load\n      formatted: \"\", // initialization of string for formatting of \"TaskLamp\"\n      toggleButtonId: this.props.id.toString() + \"ToggleRemote\"\n    }\n  }\n  render() {\n    // Make some formatting changes when the plug load chosen is task lamp\n    if (this.state.current === \"TaskLamp\") {\n      this.state.formatted = \"Task Lamp\"\n    } else {\n      this.state.formatted = this.state.current\n    }\n\n    return(\n      <div class=\"containerRemote\" id={this.state.id}>\n        <p style={{textAlign: \"center\", fontFamily: \"Helvetica\"}}> {this.state.formatted} </p>\n        <Icon current={this.state.current} defaultState=\"ON\" />\n        <br />\n        <ToggleButton id={this.state.toggleButtonId} defaultChecked=\"true\"  />\n      </div>\n    )\n  }\n}\n\nexport default Box;\n"]},"metadata":{},"sourceType":"module"}