{"ast":null,"code":"var _jsxFileName = \"/Users/Work/Desktop/control-interface test/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport RemoteToggleButton from './RemoteToggleButton';\nimport RemoteBox from './RemoteBox';\nimport './index.css';\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n  style: {\n    textAlign: \"center\",\n    fontFamily: \"Helvetica\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }\n}, \" Remote Control \"), /*#__PURE__*/React.createElement(\"img\", {\n  id: \"infoIconRemote\",\n  src: \"../Images/Info.png\",\n  alt: \"info\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  id: \"infoBoxRemote\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }\n}, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    position: \"absolute\",\n    right: \"50px\",\n    top: \"20px\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  style: {\n    fontFamily: \"Helvetica\",\n    marginLeft: \"50px\",\n    marginBottom: \"5px\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }\n}, \" Master \"), /*#__PURE__*/React.createElement(RemoteToggleButton, {\n  id: \"master\",\n  defaultChecked: \"true\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }\n})), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    position: \"absolute\",\n    left: \"15%\",\n    right: \"15%\",\n    top: \"105px\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(RemoteBox, {\n  id: \"Desktop\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(RemoteBox, {\n  id: \"Monitor\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(RemoteBox, {\n  id: \"Laptop\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(RemoteBox, {\n  id: \"TaskLamp\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(RemoteBox, {\n  id: \"Fan\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }\n})))), document.getElementById('remote-control')); // Define necessary variables\n\nvar master = document.getElementById(\"master\"); // Master toggle button\n\nvar desktop = document.getElementById(\"DesktopBoxRemote\"); // Final component for desktop\n\nvar desktopImage = document.getElementById(\"DesktopIconRemote\").childNodes[0].childNodes[0].childNodes[0]; // Icon image for desktop (to be changed between green and grey)\n\nvar desktopRing = document.getElementById(\"DesktopIconRemote\").childNodes[0]; // Outer ring for desktop (to be changed between green and grey)\n\nvar monitor = document.getElementById(\"MonitorBoxRemote\"); // Final component for monitor\n\nvar monitorImage = document.getElementById(\"MonitorIconRemote\").childNodes[0].childNodes[0].childNodes[0]; // Icon image for monitor (to be changed between green and grey)\n\nvar monitorRing = document.getElementById(\"MonitorIconRemote\").childNodes[0]; // Outer ring for monitor (to be changed between green and grey)\n\nvar laptop = document.getElementById(\"LaptopBoxRemote\"); // Final component for laptop\n\nvar laptopImage = document.getElementById(\"LaptopIconRemote\").childNodes[0].childNodes[0].childNodes[0]; // Icon image for laptop (to be changed between green and grey)\n\nvar laptopRing = document.getElementById(\"LaptopIconRemote\").childNodes[0]; // Outer ring for laptop (to be changed between green and grey)\n\nvar tasklamp = document.getElementById(\"TaskLampBoxRemote\"); // Final component for task lamp\n\nvar tasklampImage = document.getElementById(\"TaskLampIconRemote\").childNodes[0].childNodes[0].childNodes[0]; // Icon image for task lamp (to be changed between green and grey)\n\nvar tasklampRing = document.getElementById(\"TaskLampIconRemote\").childNodes[0]; // Outer ring for task lamp (to be changed between green and grey)\n\nvar fan = document.getElementById(\"FanBoxRemote\"); // Final component for fan\n\nvar fanImage = document.getElementById(\"FanIconRemote\").childNodes[0].childNodes[0].childNodes[0]; // Icon image for fan (to be changed between green and grey)\n\nvar fanRing = document.getElementById(\"FanIconRemote\").childNodes[0]; // Outer ring for fan (to be changed between green and grey)\n// Define function for when master button is clicked\n\nmaster.onclick = function () {\n  if (document.getElementById(\"master\").checked === true) {\n    // Switch ON all plug loads if master button is confirmed to be turned ON\n    if (window.confirm(\"You are switching on all your plug loads.\")) {\n      // Switch desktop toggle button to ON\n      document.getElementById(\"DesktopToggleRemote\").checked = true; // Green image should be shown\n\n      desktopImage.src = \"../Images/Desktop ON.png\"; // Outer circle should be green\n\n      desktopRing.classList.remove(\"greyRemote\");\n      desktopRing.classList.add(\"greenRemote\"); // Switch monitor toggle button to ON\n\n      document.getElementById(\"MonitorToggleRemote\").checked = true; // Green image should be shown\n\n      monitorImage.src = \"../Images/Monitor ON.png\"; // Outer circle should be green\n\n      monitorRing.classList.remove(\"greyRemote\");\n      monitorRing.classList.add(\"greenRemote\"); // Switch laptop toggle button to ON\n\n      document.getElementById(\"LaptopToggleRemote\").checked = true; // Green image should be shown\n\n      laptopImage.src = \"../Images/Laptop ON.png\"; // Outer circle should be green\n\n      laptopRing.classList.remove(\"greyRemote\");\n      laptopRing.classList.add(\"greenRemote\"); // Switch task lamp toggle button to ON\n\n      document.getElementById(\"TaskLampToggleRemote\").checked = true; // Green image should be shown\n\n      tasklampImage.src = \"../Images/Task Lamp ON.png\"; // Outer circle should be green\n\n      tasklampRing.classList.remove(\"greyRemote\");\n      tasklampRing.classList.add(\"greenRemote\"); // Switch fan toggle button to ON\n\n      document.getElementById(\"FanToggleRemote\").checked = true; // Green image should be shown\n\n      fanImage.src = \"../Images/Fan ON.png\"; // Outer circle should be green\n\n      fanRing.classList.remove(\"greyRemote\");\n      fanRing.classList.add(\"greenRemote\");\n    } else {\n      // Nothing happens if user does not confirm to switch ON all plug loads\n      // Master button remains OFF\n      document.getElementById(\"master\").checked = false;\n    }\n  } else {\n    // Switch OFF all plug loads if master button is confirmed to be turned OFF\n    if (window.confirm(\"You are switching off all your plug loads.\")) {\n      // Switch desktop toggle button to OFF\n      document.getElementById(\"DesktopToggleRemote\").checked = false; // Grey image should be shown\n\n      desktopImage.src = \"../Images/Desktop OFF.png\"; // Outer circle should be grey\n\n      desktopRing.classList.remove(\"greenRemote\");\n      desktopRing.classList.add(\"greyRemote\"); // Switch monitor toggle button to OFF\n\n      document.getElementById(\"MonitorToggleRemote\").checked = false; // Grey image should be shown\n\n      monitorImage.src = \"../Images/Monitor OFF.png\"; // Outer ring should be grey\n\n      monitorRing.classList.remove(\"greenRemote\");\n      monitorRing.classList.add(\"greyRemote\"); // Switch laptop toggle button to OFF\n\n      document.getElementById(\"LaptopToggleRemote\").checked = false; // Grey image should be shown\n\n      laptopImage.src = \"../Images/Laptop OFF.png\"; // Outer ring should be grey\n\n      laptopRing.classList.remove(\"greenRemote\");\n      laptopRing.classList.add(\"greyRemote\"); // Switch task lamp toggle button to OFF\n\n      document.getElementById(\"TaskLampToggleRemote\").checked = false; // Grey image should be shown\n\n      tasklampImage.src = \"../Images/Task Lamp OFF.png\"; // Outer ring should be grey\n\n      tasklampRing.classList.remove(\"greenRemote\");\n      tasklampRing.classList.add(\"greyRemote\"); // Switch fan toggle button to OFF\n\n      document.getElementById(\"FanToggleRemote\").checked = false; // Grey image should be shown\n\n      fanImage.src = \"../Images/Fan OFF.png\"; // Outer ring should be grey\n\n      fanRing.classList.remove(\"greenRemote\");\n      fanRing.classList.add(\"greyRemote\");\n    } else {\n      // Nothing happens if user does not confirm to switch OFF all plug loads\n      // Master button remains ON\n      document.getElementById(\"master\").checked = true;\n    }\n  }\n}; // Define function for when desktop component is clicked\n\n\ndesktop.onclick = function () {\n  // Toggle the switch\n  document.getElementById(\"DesktopToggleRemote\").checked = !document.getElementById(\"DesktopToggleRemote\").checked; // Get the current state (ON/OFF) of the plug load\n\n  var current_state = document.getElementById(\"DesktopToggleRemote\").checked;\n\n  if (current_state === true) {\n    // If ON, image and outer ring should be green\n    desktopImage.src = \"../Images/Desktop ON.png\";\n    desktopRing.classList.remove(\"greyRemote\");\n    desktopRing.classList.add(\"greenRemote\"); // If at least one plug load is ON, master button is automatically toggled to ON.\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n\n    Main();\n  } else {\n    // If OFF, image and outer ring should be grey\n    desktopImage.src = \"../Images/Desktop OFF.png\";\n    desktopRing.classList.remove(\"greenRemote\");\n    desktopRing.classList.add(\"greyRemote\"); // If at least one plug load is ON, master button is automatically toggled to ON.\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n\n    Main();\n  }\n}; // Define function for when monitor component is clicked\n\n\nmonitor.onclick = function () {\n  // Toggle the switch\n  document.getElementById(\"MonitorToggleRemote\").checked = !document.getElementById(\"MonitorToggleRemote\").checked; // Get the current state (ON/OFF) of the plug load\n\n  var current_state = document.getElementById(\"MonitorToggleRemote\").checked;\n\n  if (current_state === true) {\n    // If ON, image and outer ring should be green\n    monitorImage.src = \"../Images/Monitor ON.png\";\n    monitorRing.classList.remove(\"greyRemote\");\n    monitorRing.classList.add(\"greenRemote\"); // If at least one plug load is ON, master button is automatically toggled to ON.\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n\n    Main();\n  } else {\n    // If OFF, image and outer ring should be grey\n    monitorImage.src = \"../Images/Monitor OFF.png\";\n    monitorRing.classList.remove(\"greenRemote\");\n    monitorRing.classList.add(\"greyRemote\"); // If at least one plug load is ON, master button is automatically toggled to ON.\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n\n    Main();\n  }\n}; // Define function for when laptop component is clicked\n\n\nlaptop.onclick = function () {\n  // Toggle the switch\n  document.getElementById(\"LaptopToggleRemote\").checked = !document.getElementById(\"LaptopToggleRemote\").checked; // Get the current state (ON/OFF) of the plug load\n\n  var current_state = document.getElementById(\"LaptopToggleRemote\").checked;\n\n  if (current_state === true) {\n    // If ON, image and outer ring should be green\n    laptopImage.src = \"../Images/Laptop ON.png\";\n    laptopRing.classList.remove(\"greyRemote\");\n    laptopRing.classList.add(\"greenRemote\"); // If at least one plug load is ON, master button is automatically toggled to ON.\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n\n    Main();\n  } else {\n    // If OFF, image and outer ring should be grey\n    laptopImage.src = \"../Images/Laptop OFF.png\";\n    laptopRing.classList.remove(\"greenRemote\");\n    laptopRing.classList.add(\"greyRemote\"); // If at least one plug load is ON, master button is automatically toggled to ON.\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n\n    Main();\n  }\n}; // Define function for when task lamp component is clicked\n\n\ntasklamp.onclick = function () {\n  // Toggle the switch\n  document.getElementById(\"TaskLampToggleRemote\").checked = !document.getElementById(\"TaskLampToggleRemote\").checked; // Get the current state (ON/OFF) of the plug load\n\n  var current_state = document.getElementById(\"TaskLampToggleRemote\").checked;\n\n  if (current_state === true) {\n    // If ON, image and outer ring should be green\n    tasklampImage.src = \"../Images/Task Lamp ON.png\";\n    tasklampRing.classList.remove(\"greyRemote\");\n    tasklampRing.classList.add(\"greenRemote\"); // If at least one plug load is ON, master button is automatically toggled to ON.\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n\n    Main();\n  } else {\n    // If OFF, image and outer ring should be grey\n    tasklampImage.src = \"../Images/Task Lamp OFF.png\";\n    tasklampRing.classList.remove(\"greenRemote\");\n    tasklampRing.classList.add(\"greyRemote\"); // If at least one plug load is ON, master button is automatically toggled to ON.\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n\n    Main();\n  }\n}; // Define the function for when fan component is clicked\n\n\nfan.onclick = function () {\n  // Toggle the switch\n  document.getElementById(\"FanToggleRemote\").checked = !document.getElementById(\"FanToggleRemote\").checked; // Get the current state (ON/OFF) of the plug load\n\n  var current_state = document.getElementById(\"FanToggleRemote\").checked;\n\n  if (current_state === true) {\n    // If ON, image and outer ring should be green\n    fanImage.src = \"../Images/Fan ON.png\";\n    fanRing.classList.remove(\"greyRemote\");\n    fanRing.classList.add(\"greenRemote\"); // If at least one plug load is ON, master button is automatically toggled to ON.\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n\n    Main();\n  } else {\n    // If OFF, image and outer ring should be grey\n    fanImage.src = \"../Images/Fan OFF.png\";\n    fanRing.classList.remove(\"greenRemote\");\n    fanRing.classList.add(\"greyRemote\"); // If at least one plug load is ON, master button is automatically toggled to ON.\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n\n    Main();\n  }\n};\n\nfunction Main() {\n  // If at least one plug load is ON, master button is automatically toggled to ON.\n  if (document.getElementById(\"DesktopToggleRemote\").checked || document.getElementById(\"MonitorToggleRemote\").checked || document.getElementById(\"LaptopToggleRemote\").checked || document.getElementById(\"TaskLampToggleRemote\").checked || document.getElementById(\"FanToggleRemote\").checked) {\n    document.getElementById(\"master\").checked = true;\n  } else {\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n    if (!document.getElementById(\"DesktopToggleRemote\").checked && !document.getElementById(\"MonitorToggleRemote\").checked && !document.getElementById(\"LaptopToggleRemote\").checked && !document.getElementById(\"TaskLampToggleRemote\").checked && !document.getElementById(\"FanToggleRemote\").checked) {\n      document.getElementById(\"master\").checked = false;\n    }\n  }\n} // Toggle information box\n\n\nvar infoiconremote = document.getElementById(\"infoIconRemote\");\n\ninfoiconremote.onclick = function () {\n  var element = document.getElementById(\"informationBoxRemote\");\n\n  if (element === null) {\n    ReactDOM.render( /*#__PURE__*/React.createElement(\"div\", {\n      id: \"informationBoxRemote\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }\n    }, \" This control feature allows you to manually switch your plug loads ON / OFF wirelessly without having to be physically present at your desk.\")), document.getElementById('infoBoxRemote'));\n  } else {\n    ReactDOM.unmountComponentAtNode(document.getElementById('infoBoxRemote'));\n  }\n};","map":{"version":3,"sources":["/Users/Work/Desktop/control-interface test/src/index.js"],"names":["React","ReactDOM","RemoteToggleButton","RemoteBox","render","textAlign","fontFamily","position","right","top","marginLeft","marginBottom","left","document","getElementById","master","desktop","desktopImage","childNodes","desktopRing","monitor","monitorImage","monitorRing","laptop","laptopImage","laptopRing","tasklamp","tasklampImage","tasklampRing","fan","fanImage","fanRing","onclick","checked","window","confirm","src","classList","remove","add","current_state","Main","infoiconremote","element","unmountComponentAtNode"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RemoteToggleButton from './RemoteToggleButton';\nimport RemoteBox from './RemoteBox';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n      <h1 style={{textAlign: \"center\", fontFamily: \"Helvetica\"}}> Remote Control </h1>\n      <img id=\"infoIconRemote\" src=\"../Images/Info.png\" alt=\"info\"/>\n      <div id=\"infoBoxRemote\"> </div>\n\n      <div style={{position: \"absolute\", right: \"50px\", top: \"20px\"}}>\n        <p style={{fontFamily: \"Helvetica\", marginLeft: \"50px\", marginBottom:\"5px\"}}> Master </p>\n        <RemoteToggleButton id=\"master\" defaultChecked=\"true\" />\n      </div>\n      <br />\n      <br />\n\n      <div style={{position: \"absolute\", left:\"15%\", right: \"15%\", top: \"105px\"}}>\n        <RemoteBox id=\"Desktop\" />\n        <RemoteBox id=\"Monitor\"/>\n        <RemoteBox id=\"Laptop\" />\n        <RemoteBox id=\"TaskLamp\"/>\n        <RemoteBox id=\"Fan\" />\n      </div>\n    </>\n  </React.StrictMode>,\n  document.getElementById('remote-control')\n);\n\n// Define necessary variables\nvar master = document.getElementById(\"master\"); // Master toggle button\nvar desktop = document.getElementById(\"DesktopBoxRemote\"); // Final component for desktop\nvar desktopImage = document.getElementById(\"DesktopIconRemote\").childNodes[0].childNodes[0].childNodes[0]; // Icon image for desktop (to be changed between green and grey)\nvar desktopRing = document.getElementById(\"DesktopIconRemote\").childNodes[0]; // Outer ring for desktop (to be changed between green and grey)\nvar monitor = document.getElementById(\"MonitorBoxRemote\"); // Final component for monitor\nvar monitorImage = document.getElementById(\"MonitorIconRemote\").childNodes[0].childNodes[0].childNodes[0]; // Icon image for monitor (to be changed between green and grey)\nvar monitorRing = document.getElementById(\"MonitorIconRemote\").childNodes[0]; // Outer ring for monitor (to be changed between green and grey)\nvar laptop = document.getElementById(\"LaptopBoxRemote\"); // Final component for laptop\nvar laptopImage = document.getElementById(\"LaptopIconRemote\").childNodes[0].childNodes[0].childNodes[0]; // Icon image for laptop (to be changed between green and grey)\nvar laptopRing = document.getElementById(\"LaptopIconRemote\").childNodes[0]; // Outer ring for laptop (to be changed between green and grey)\nvar tasklamp = document.getElementById(\"TaskLampBoxRemote\"); // Final component for task lamp\nvar tasklampImage = document.getElementById(\"TaskLampIconRemote\").childNodes[0].childNodes[0].childNodes[0]; // Icon image for task lamp (to be changed between green and grey)\nvar tasklampRing = document.getElementById(\"TaskLampIconRemote\").childNodes[0]; // Outer ring for task lamp (to be changed between green and grey)\nvar fan = document.getElementById(\"FanBoxRemote\"); // Final component for fan\nvar fanImage = document.getElementById(\"FanIconRemote\").childNodes[0].childNodes[0].childNodes[0]; // Icon image for fan (to be changed between green and grey)\nvar fanRing = document.getElementById(\"FanIconRemote\").childNodes[0]; // Outer ring for fan (to be changed between green and grey)\n\n// Define function for when master button is clicked\nmaster.onclick = function() {\n  if (document.getElementById(\"master\").checked === true) {\n    // Switch ON all plug loads if master button is confirmed to be turned ON\n    if (window.confirm(\"You are switching on all your plug loads.\")) {\n      // Switch desktop toggle button to ON\n      document.getElementById(\"DesktopToggleRemote\").checked = true;\n      // Green image should be shown\n      desktopImage.src = \"../Images/Desktop ON.png\";\n      // Outer circle should be green\n      desktopRing.classList.remove(\"greyRemote\");\n      desktopRing.classList.add(\"greenRemote\");\n\n      // Switch monitor toggle button to ON\n      document.getElementById(\"MonitorToggleRemote\").checked = true;\n      // Green image should be shown\n      monitorImage.src = \"../Images/Monitor ON.png\";\n      // Outer circle should be green\n      monitorRing.classList.remove(\"greyRemote\");\n      monitorRing.classList.add(\"greenRemote\");\n\n      // Switch laptop toggle button to ON\n      document.getElementById(\"LaptopToggleRemote\").checked = true;\n      // Green image should be shown\n      laptopImage.src = \"../Images/Laptop ON.png\";\n      // Outer circle should be green\n      laptopRing.classList.remove(\"greyRemote\");\n      laptopRing.classList.add(\"greenRemote\");\n\n      // Switch task lamp toggle button to ON\n      document.getElementById(\"TaskLampToggleRemote\").checked = true;\n      // Green image should be shown\n      tasklampImage.src = \"../Images/Task Lamp ON.png\";\n      // Outer circle should be green\n      tasklampRing.classList.remove(\"greyRemote\");\n      tasklampRing.classList.add(\"greenRemote\");\n\n      // Switch fan toggle button to ON\n      document.getElementById(\"FanToggleRemote\").checked = true;\n      // Green image should be shown\n      fanImage.src = \"../Images/Fan ON.png\";\n      // Outer circle should be green\n      fanRing.classList.remove(\"greyRemote\");\n      fanRing.classList.add(\"greenRemote\");\n    } else {\n      // Nothing happens if user does not confirm to switch ON all plug loads\n      // Master button remains OFF\n      document.getElementById(\"master\").checked = false;\n    }\n  } else {\n    // Switch OFF all plug loads if master button is confirmed to be turned OFF\n    if (window.confirm(\"You are switching off all your plug loads.\")) {\n      // Switch desktop toggle button to OFF\n      document.getElementById(\"DesktopToggleRemote\").checked = false;\n      // Grey image should be shown\n      desktopImage.src = \"../Images/Desktop OFF.png\";\n      // Outer circle should be grey\n      desktopRing.classList.remove(\"greenRemote\");\n      desktopRing.classList.add(\"greyRemote\");\n\n      // Switch monitor toggle button to OFF\n      document.getElementById(\"MonitorToggleRemote\").checked = false;\n      // Grey image should be shown\n      monitorImage.src = \"../Images/Monitor OFF.png\";\n      // Outer ring should be grey\n      monitorRing.classList.remove(\"greenRemote\");\n      monitorRing.classList.add(\"greyRemote\");\n\n      // Switch laptop toggle button to OFF\n      document.getElementById(\"LaptopToggleRemote\").checked = false;\n      // Grey image should be shown\n      laptopImage.src = \"../Images/Laptop OFF.png\";\n      // Outer ring should be grey\n      laptopRing.classList.remove(\"greenRemote\");\n      laptopRing.classList.add(\"greyRemote\");\n\n      // Switch task lamp toggle button to OFF\n      document.getElementById(\"TaskLampToggleRemote\").checked = false;\n      // Grey image should be shown\n      tasklampImage.src = \"../Images/Task Lamp OFF.png\";\n      // Outer ring should be grey\n      tasklampRing.classList.remove(\"greenRemote\");\n      tasklampRing.classList.add(\"greyRemote\");\n\n      // Switch fan toggle button to OFF\n      document.getElementById(\"FanToggleRemote\").checked = false;\n      // Grey image should be shown\n      fanImage.src = \"../Images/Fan OFF.png\";\n      // Outer ring should be grey\n      fanRing.classList.remove(\"greenRemote\");\n      fanRing.classList.add(\"greyRemote\");\n    } else {\n      // Nothing happens if user does not confirm to switch OFF all plug loads\n      // Master button remains ON\n      document.getElementById(\"master\").checked = true;\n    }\n  }\n}\n\n\n// Define function for when desktop component is clicked\ndesktop.onclick = function() {\n  // Toggle the switch\n  document.getElementById(\"DesktopToggleRemote\").checked = !document.getElementById(\"DesktopToggleRemote\").checked\n\n  // Get the current state (ON/OFF) of the plug load\n  var current_state = document.getElementById(\"DesktopToggleRemote\").checked\n\n  if (current_state === true) {\n    // If ON, image and outer ring should be green\n    desktopImage.src = \"../Images/Desktop ON.png\";\n    desktopRing.classList.remove(\"greyRemote\");\n    desktopRing.classList.add(\"greenRemote\");\n\n    // If at least one plug load is ON, master button is automatically toggled to ON.\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n    Main()\n  } else {\n    // If OFF, image and outer ring should be grey\n    desktopImage.src = \"../Images/Desktop OFF.png\";\n    desktopRing.classList.remove(\"greenRemote\");\n    desktopRing.classList.add(\"greyRemote\");\n\n    // If at least one plug load is ON, master button is automatically toggled to ON.\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n    Main()\n  }\n}\n\n// Define function for when monitor component is clicked\nmonitor.onclick = function() {\n  // Toggle the switch\n  document.getElementById(\"MonitorToggleRemote\").checked = !document.getElementById(\"MonitorToggleRemote\").checked\n\n  // Get the current state (ON/OFF) of the plug load\n  var current_state = document.getElementById(\"MonitorToggleRemote\").checked\n\n  if (current_state === true) {\n    // If ON, image and outer ring should be green\n    monitorImage.src = \"../Images/Monitor ON.png\";\n    monitorRing.classList.remove(\"greyRemote\");\n    monitorRing.classList.add(\"greenRemote\");\n\n    // If at least one plug load is ON, master button is automatically toggled to ON.\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n    Main()\n  } else {\n    // If OFF, image and outer ring should be grey\n    monitorImage.src = \"../Images/Monitor OFF.png\";\n    monitorRing.classList.remove(\"greenRemote\");\n    monitorRing.classList.add(\"greyRemote\");\n\n    // If at least one plug load is ON, master button is automatically toggled to ON.\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n    Main()\n  }\n}\n\n// Define function for when laptop component is clicked\nlaptop.onclick = function() {\n  // Toggle the switch\n  document.getElementById(\"LaptopToggleRemote\").checked = !document.getElementById(\"LaptopToggleRemote\").checked\n\n  // Get the current state (ON/OFF) of the plug load\n  var current_state = document.getElementById(\"LaptopToggleRemote\").checked\n\n  if (current_state === true) {\n    // If ON, image and outer ring should be green\n    laptopImage.src = \"../Images/Laptop ON.png\";\n    laptopRing.classList.remove(\"greyRemote\");\n    laptopRing.classList.add(\"greenRemote\");\n\n    // If at least one plug load is ON, master button is automatically toggled to ON.\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n    Main()\n  } else {\n    // If OFF, image and outer ring should be grey\n    laptopImage.src = \"../Images/Laptop OFF.png\";\n    laptopRing.classList.remove(\"greenRemote\");\n    laptopRing.classList.add(\"greyRemote\");\n\n    // If at least one plug load is ON, master button is automatically toggled to ON.\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n    Main()\n  }\n}\n\n// Define function for when task lamp component is clicked\ntasklamp.onclick = function() {\n  // Toggle the switch\n  document.getElementById(\"TaskLampToggleRemote\").checked = !document.getElementById(\"TaskLampToggleRemote\").checked\n\n  // Get the current state (ON/OFF) of the plug load\n  var current_state = document.getElementById(\"TaskLampToggleRemote\").checked\n\n  if (current_state === true) {\n    // If ON, image and outer ring should be green\n    tasklampImage.src = \"../Images/Task Lamp ON.png\";\n    tasklampRing.classList.remove(\"greyRemote\");\n    tasklampRing.classList.add(\"greenRemote\");\n\n    // If at least one plug load is ON, master button is automatically toggled to ON.\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n    Main()\n  } else {\n    // If OFF, image and outer ring should be grey\n    tasklampImage.src = \"../Images/Task Lamp OFF.png\";\n    tasklampRing.classList.remove(\"greenRemote\");\n    tasklampRing.classList.add(\"greyRemote\");\n\n    // If at least one plug load is ON, master button is automatically toggled to ON.\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n    Main()\n  }\n}\n\n// Define the function for when fan component is clicked\nfan.onclick = function() {\n  // Toggle the switch\n  document.getElementById(\"FanToggleRemote\").checked = !document.getElementById(\"FanToggleRemote\").checked\n\n  // Get the current state (ON/OFF) of the plug load\n  var current_state = document.getElementById(\"FanToggleRemote\").checked\n\n  if (current_state === true) {\n    // If ON, image and outer ring should be green\n    fanImage.src = \"../Images/Fan ON.png\";\n    fanRing.classList.remove(\"greyRemote\");\n    fanRing.classList.add(\"greenRemote\");\n\n    // If at least one plug load is ON, master button is automatically toggled to ON.\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n    Main()\n  } else {\n    // If OFF, image and outer ring should be grey\n    fanImage.src = \"../Images/Fan OFF.png\";\n    fanRing.classList.remove(\"greenRemote\");\n    fanRing.classList.add(\"greyRemote\");\n\n    // If at least one plug load is ON, master button is automatically toggled to ON.\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n    Main()\n  }\n}\n\n\nfunction Main() {\n  // If at least one plug load is ON, master button is automatically toggled to ON.\n  if (document.getElementById(\"DesktopToggleRemote\").checked || document.getElementById(\"MonitorToggleRemote\").checked || document.getElementById(\"LaptopToggleRemote\").checked || document.getElementById(\"TaskLampToggleRemote\").checked || document.getElementById(\"FanToggleRemote\").checked) {\n    document.getElementById(\"master\").checked = true;\n  } else {\n    // If all plug loads are OFF, master button is automatically toggled to OFF.\n    if (!document.getElementById(\"DesktopToggleRemote\").checked && !document.getElementById(\"MonitorToggleRemote\").checked && !document.getElementById(\"LaptopToggleRemote\").checked && !document.getElementById(\"TaskLampToggleRemote\").checked && !document.getElementById(\"FanToggleRemote\").checked) {\n      document.getElementById(\"master\").checked = false;\n    }\n  }\n}\n\n// Toggle information box\nvar infoiconremote = document.getElementById(\"infoIconRemote\");\ninfoiconremote.onclick = function() {\n  var element = document.getElementById(\"informationBoxRemote\");\n\n  if (element === null) {\n    ReactDOM.render(\n      <div id=\"informationBoxRemote\">\n        <p> This control feature allows you to manually switch your plug loads ON / OFF wirelessly without having to be physically present at your desk.</p>\n      </div>, document.getElementById('infoBoxRemote'));\n  } else {\n    ReactDOM.unmountComponentAtNode(document.getElementById('infoBoxRemote'));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}