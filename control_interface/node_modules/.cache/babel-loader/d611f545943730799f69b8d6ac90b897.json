{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zeyne\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\plug_mate\\\\control-interface test\\\\src\\\\PresenceDropdown.js\";\n// Component for the dropdown\nimport React from \"react\";\n\nclass PresenceDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: this.props.current,\n      // the plug load that the dropdown is for\n      selected: \"\",\n      // selected value\n      disabled: this.props.disabled,\n      // disable dropdown (true or false)\n      id: this.props.current + \"select\",\n      // id given to component\n      plugLoadExtra: \"\" // additional string to help with task lamp formatting\n\n    };\n    window.dropdown = this; // make sure that dropdown can be accessed globally\n  }\n\n  render() {\n    // if the plug load is task lamp, format from TaskLamp to Task Lamp\n    if (this.state.current === \"TaskLamp\") {\n      this.state.plugLoadExtra = \"Task Lamp\";\n    } else {\n      this.state.plugLoadExtra = this.state.current;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        fontFamily: \"Helvetica\",\n        fontSize: \"12px\",\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \" \", this.state.plugLoadExtra, \" \"), /*#__PURE__*/React.createElement(\"select\", {\n      style: {\n        margin: \"10px 0\"\n      },\n      defaultValue: this.state.selected,\n      name: this.state.current,\n      id: this.state.id,\n      onChange: e => this.setState({\n        selected: e.target.value\n      }),\n      disabled: this.state.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"5 minutes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, \" 5 minutes \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"10 minutes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, \" 10 minutes \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"20 minutes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, \" 20 minutes \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"30 minutes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, \" 30 minutes \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"60 minutes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \" 1 hour \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"other\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, \" Other \")));\n  }\n\n}\n\nexport default PresenceDropdown;","map":{"version":3,"sources":["C:/Users/zeyne/OneDrive/Masaüstü/plug_mate/control-interface test/src/PresenceDropdown.js"],"names":["React","PresenceDropdown","Component","constructor","props","state","current","selected","disabled","id","plugLoadExtra","window","dropdown","render","fontFamily","fontSize","marginTop","margin","e","setState","target","value"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,gBAAN,SAA+BD,KAAK,CAACE,SAArC,CAA+C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,OADT;AACkB;AAC7BC,MAAAA,QAAQ,EAAE,EAFC;AAEG;AACdC,MAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWI,QAHV;AAGoB;AAC/BC,MAAAA,EAAE,EAAE,KAAKL,KAAL,CAAWE,OAAX,GAAqB,QAJd;AAIwB;AACnCI,MAAAA,aAAa,EAAE,EALJ,CAKQ;;AALR,KAAb;AAOAC,IAAAA,MAAM,CAACC,QAAP,GAAkB,IAAlB,CATiB,CASO;AACzB;;AACDC,EAAAA,MAAM,GAAG;AACL;AACF,QAAI,KAAKR,KAAL,CAAWC,OAAX,KAAuB,UAA3B,EAAuC;AACrC,WAAKD,KAAL,CAAWK,aAAX,GAA2B,WAA3B;AACD,KAFD,MAEO;AACL,WAAKL,KAAL,CAAWK,aAAX,GAA2B,KAAKL,KAAL,CAAWC,OAAtC;AACD;;AACD,wBACE,uDACE;AAAI,MAAA,KAAK,EAAE;AAACQ,QAAAA,UAAU,EAAE,WAAb;AAA0BC,QAAAA,QAAQ,EAAE,MAApC;AAA4CC,QAAAA,SAAS,EAAE;AAAvD,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA6E,KAAKX,KAAL,CAAWK,aAAxF,MADF,eAEE;AACE,MAAA,KAAK,EAAE;AAACO,QAAAA,MAAM,EAAE;AAAT,OADT;AAEE,MAAA,YAAY,EAAE,KAAKZ,KAAL,CAAWE,QAF3B;AAGE,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,OAHnB;AAIE,MAAA,EAAE,EAAE,KAAKD,KAAL,CAAWI,EAJjB;AAKE,MAAA,QAAQ,EAAES,CAAC,IACT,KAAKC,QAAL,CAAc;AACZZ,QAAAA,QAAQ,EAAEW,CAAC,CAACE,MAAF,CAASC;AADP,OAAd,CANJ;AAUE,MAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWG,QAVvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYE;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAZF,eAaE;AAAQ,MAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAbF,eAcE;AAAQ,MAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAdF,eAeE;AAAQ,MAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAfF,eAgBE;AAAQ,MAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBF,eAiBE;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAjBF,CAFF,CADF;AAwBD;;AA3C4C;;AA8C/C,eAAeP,gBAAf","sourcesContent":["// Component for the dropdown\n\nimport React from \"react\";\n\nclass PresenceDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: this.props.current, // the plug load that the dropdown is for\n      selected: \"\", // selected value\n      disabled: this.props.disabled, // disable dropdown (true or false)\n      id: this.props.current + \"select\", // id given to component\n      plugLoadExtra: \"\", // additional string to help with task lamp formatting\n    };\n    window.dropdown = this; // make sure that dropdown can be accessed globally\n  }\n  render() {\n      // if the plug load is task lamp, format from TaskLamp to Task Lamp\n    if (this.state.current === \"TaskLamp\") {\n      this.state.plugLoadExtra = \"Task Lamp\";\n    } else {\n      this.state.plugLoadExtra = this.state.current;\n    }\n    return (\n      <>\n        <h3 style={{fontFamily: \"Helvetica\", fontSize: \"12px\", marginTop: \"10px\"}}> {this.state.plugLoadExtra} </h3>\n        <select\n          style={{margin: \"10px 0\"}}\n          defaultValue={this.state.selected}\n          name={this.state.current}\n          id={this.state.id}\n          onChange={e =>\n            this.setState({\n              selected: e.target.value\n            })\n          }\n          disabled={this.state.disabled}\n        >\n          <option value=\"5 minutes\"> 5 minutes </option>\n          <option value=\"10 minutes\"> 10 minutes </option>\n          <option value=\"20 minutes\"> 20 minutes </option>\n          <option value=\"30 minutes\"> 30 minutes </option>\n          <option value=\"60 minutes\"> 1 hour </option>\n          <option value=\"other\"> Other </option>\n        </select>\n      </>\n    );\n  }\n}\n\nexport default PresenceDropdown;\n"]},"metadata":{},"sourceType":"module"}